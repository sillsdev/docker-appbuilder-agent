name: AppBuilder Agent

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log Level"
        required: true
        default: "warning"
      tags:
        description: "Tags"
  schedule:
    - cron: "0 0 * * 0" # weekly

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.SIL__AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SIL__AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.SIL__AWS_DEFAULT_REGION }}
      AWS_ECR_ACCOUNT: ${{ secrets.SIL__AWS_ECR_ACCOUNT }}
      FCBH_AWS_ACCESS_KEY_ID: ${{ secrets.FCBH__AWS_ACCESS_KEY_ID }}
      FCBH_AWS_SECRET_ACCESS_KEY: ${{ secrets.FCBH__AWS_SECRET_ACCESS_KEY }}
      FCBH_AWS_REGION: ${{ secrets.FCBH__AWS_DEFAULT_REGION }}
      FCBH_AWS_ECR_ACCOUNT: ${{ secrets.FCBH__AWS_ECR_ACCOUNT }}
    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Show environment
        run: env

      - name: Build docker image
        run: |
          DOCKER_TAG=latest
          BRANCH=${GITHUB_REF/refs\/heads\//}
          case $BRANCH in develop) APP_ENV="stg" ;; master) APP_ENV="prd" ;; *) APP_ENV="stg" && DOCKER_TAG=$BRANCH ;; esac
          echo "DOCKER_TAG=$DOCKER_TAG"
          pip install --user awscli
          docker build -t build-appbuilder-agent .
          docker images
          mkdir $HOME/out
          id=$(docker create build-appbuilder-agent)
          docker cp $id:/usr/share/app-builders/VERSION $HOME/out
          docker rm -v $id
          export VERSION_TAG=$(cat $HOME/out/VERSION)
          # Push to Amazon ECR
          eval $(aws ecr get-login --no-include-email --region $AWS_REGION) #needs AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY env
          docker tag build-appbuilder-agent "${AWS_ECR_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/appbuilder-agent-${APP_ENV}:${DOCKER_TAG}"
          docker push "${AWS_ECR_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/appbuilder-agent-${APP_ENV}:${DOCKER_TAG}"
          docker tag build-appbuilder-agent "${AWS_ECR_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/appbuilder-agent-${APP_ENV}:${VERSION_TAG}"
          docker push "${AWS_ECR_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/appbuilder-agent-${APP_ENV}:${VERSION_TAG}"
          # push master to FCBH Amazon ECR
          if [[ "${BRANCH}" == "master" ]]; then 
          export AWS_ACCESS_KEY_ID=$FCBH_AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$FCBH_AWS_SECRET_ACCESS_KEY
          eval $(aws ecr get-login --no-include-email --region $FCBH_AWS_REGION)
          docker tag build-appbuilder-agent "${FCBH_AWS_ECR_ACCOUNT}.dkr.ecr.${FCBH_AWS_REGION}.amazonaws.com/appbuilder-agent-${APP_ENV}:${DOCKER_TAG}"
          docker push "${FCBH_AWS_ECR_ACCOUNT}.dkr.ecr.${FCBH_AWS_REGION}.amazonaws.com/appbuilder-agent-${APP_ENV}:${DOCKER_TAG}"
          docker tag build-appbuilder-agent "${FCBH_AWS_ECR_ACCOUNT}.dkr.ecr.${FCBH_AWS_REGION}.amazonaws.com/appbuilder-agent-${APP_ENV}:${VERSION_TAG}"
          docker push "${FCBH_AWS_ECR_ACCOUNT}.dkr.ecr.${FCBH_AWS_REGION}.amazonaws.com/appbuilder-agent-${APP_ENV}:${VERSION_TAG}"
          fi
          # Push to GitHub Container Registry
          docker tag build-appbuilder-agent "ghcr.io/sillsdev/appbuilder-agent-${APP_ENV}:$DOCKER_TAG"
          docker push "ghcr.io/sillsdev/appbuilder-agent-${APP_ENV}:$DOCKER_TAG"
          docker tag build-appbuilder-agent "ghcr.io/sillsdev/appbuilder-agent-${APP_ENV}:$VERSION_TAG"
          docker push "ghcr.io/sillsdev/appbuilder-agent-${APP_ENV}:$VERSION_TAG"
